package main

import (
	"html/template"
	"os"
	"time"
)

type Questions struct {
	AItests   []AItest
	Generated time.Time
}

type AItest struct {
	PromptPath string
	Question   string
	Answers    Answers
}

type Answers []Answer

type Answer struct {
	Name  string
	Value string
}

func main() {
	generateReport(Questions{
		Generated: time.Now(),
		AItests: []AItest{
			{
				PromptPath: "path/to/prompt",
				Question:   "What is the capital of France?",
				Answers: Answers{
					Answer{
						Name:  "A",
						Value: "Paris",
					},
				},
			},
			{
				PromptPath: "path/to/prompt",
				Question:   "What is the capital of England?",
				Answers: Answers{
					Answer{
						Name:  "OpenAI",
						Value: "London",
					},
					Answer{
						Name:  "Mistral",
						Value: "London-mate!",
					},
					Answer{
						Name:  "Anthropic",
						Value: "Laaahn-daaahn",
					},
				},
			},
		},
	})
}

func generateReport(qs Questions) error {

	const tmpl = `
<!DOCTYPE html>
<html lang=en>
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="stylesheet" href="https://newcss.net/lite.css">
<title>Large Language Model Test</title>
</head>
<body>
{{- range .AItests }}
<h1>Question</h1>
<p>{{.Question}}</p>
<h1>Answers</h1>
{{- range .Answers}}
<p>{{.Name}}: {{.Value}}</p>
{{- end}}
{{- end}}
<footer>
<p>Generated by <a href="https://github.com/kaihendry/llm-test">llm-test</a> - {{ .Generated }}</p>
</footer>
</body>
</html>
`

	t := template.Must(template.New("").Parse(tmpl))
	err := t.Execute(os.Stdout, qs)
	return err
}
